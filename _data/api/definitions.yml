definitions:
  - title: "Hooks"
    body: "A hook is a small snippet of code that is injected by the uMod patcher into the target game. When the game gets to that point of the game, the hook that was injected in that location is triggered, which then calls the hook in every plugin that uses it."
  - title: "Libraries"
    body: "A bunch of libraries (e.g. timers, permissions, config/data files, etc.) are available through uMod. The documentation for libraries is lacking at this point. If you're looking for information on a library that isn't documented, check out the Libraries directory on uMod's GitHub: uMod/Umod.Core/Libraries. The source code of the respective libraries should be clear enough to allow you to work with them."
  - title: "Extensions"
    body: "Extensions are like plugins, but they are not wrapped with security precautions (sandboxed) like plugins are, so they have full access to the system and games. Some hosts do not allow third-party or community extensions due to not being sandboxed like plugins, as they can be potentially malicious if you've obtained one from an untrustworthy developer."
  - title: "Game State"
    body: "Server game state through arguments passed to hooks and global state. This is constantly changing, as it's provided by the developers of the respective game, meaning that it's not uMod's responsibility to document this. As the games uMod supports aren't always open source , you'll often have to decompile the server files (e.g. most relevant code being in Assembly-CSharp.dll for Unity games such as Rust) with a decompiler of your choice (Visual Studio has one, JustDecompile or ILSpy together with a Reflexil mod being favorites)."
  - title: "Plugin Languages"
    body: "uMod primarily supports C#; but Lua, CoffeeScript, and Python, JavaScript, and CoffeeScript are available via manually installed extensions. There are about a billion resources for learning each of the languages, so that won't be covered here. In terms of how the C# plugin structure should be written in the respective language (C# standard library imports, plugin structure, library calls, extensions, etc.), that's a bit more complicated and not well documented yet."
  - title: "C# Standard Library"
    body: "A subset of the C# standard library, this is mostly provided by Microsoft, check out https://msdn.microsoft.com/en-us/library/d11h6832(v=vs.71).aspx. uMod blacklists certain parts of the standard library for security reasons. You can check which parts are blacklisted in the following source code file: CompiledAssembly.cs, see the 'blacklistedNamespaces' and 'whitelistedNamespaces' class members."

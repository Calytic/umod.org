description: "Make a web request to a URI (Uniform Resource Identifier) using the HTTP GET, POST, or PUT methods."
intro: "This uses the raw connection to a web page as you would on your browser. The request will return true if the web request was sent, false if not. The callback is called with 2 parameters - an integer HTTP response code and a string response."

topics:
  - title: "GET web request"
    summary: "The HTTP GET method is used to retrieve a resource, usually represented as XML or JSON. HTTP status code 200 (OK) is expected in response to a successful GET request."
  - title: "POST web request"
    summary: "The HTTP POST method is generally used to create new resources.  HTTP status code 200 (OK) OR HTTP status code 201 (Created), and an accompanying redirect (to the newly created resource) are expected in response to a successful POST request."
  - title: "PUT web request"
    summary: "The HTTP PUT is generally used to update existing resources.  The request body of a PUT request generally contains an updated representation of the original resource.  HTTP status code 200 (OK) OR HTTP status code 204 (No Content) are expected in response to a successful PUT request."
  - title: "POST & PUT body"
    summary: "Typically an updated resource is represented in a POST/PUT request body as a query string."
  - title: "Typical refactoring"
    summary: "The following example demonstrates how to refactor delegate behavior by encapsulating it in a separate method, rather than solely using an anonymous function."
  - title: "Advanced GET request"
    summary: "The following example demonstrates how to specify custom request timeout and/or additional headers."
